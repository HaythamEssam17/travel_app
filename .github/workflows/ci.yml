# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test

  
  analyze-test-build:
    runs-on: macos-latest
    env:
      FLUTTER_CHANNEL: stable
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit & widget tests
        run: flutter test --coverage

      - name: Build Android staging APK
        run: |
          flutter build apk --flavor staging -t lib/main.dart --dart-define=API_URL=${{ secrets.STAGING_API_URL }} --dart-define=FLAVOR=staging
        env:
          KEYSTORE_PATH: ${{ secrets.KEYSTORE_PATH }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload artifact (staging apk)
        uses: actions/upload-artifact@v4
        with:
          name: app-staging-apk
          path: build/app/outputs/flutter-apk/app-staging-release.apk

  build-ios:
    runs-on: macos-latest
    needs: analyze-test-build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
      - name: Install pods
        run: |
          cd ios
          pod install
      - name: Build iOS (simulator)
        run: flutter build ios --flavor staging -t lib/main.dart --no-codesign --dart-define=API_URL=${{ secrets.STAGING_API_URL }} --dart-define=FLAVOR=staging
      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-staging
          path: build/ios/iphoneos/Runner.app
